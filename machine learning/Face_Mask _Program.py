# -*- coding: utf-8 -*-
"""FaceMask Program.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nV51hyNEW5c_kN41Z_VruKXOlQMVR7TF

Task - Face Mask Challange By Shubham Jha

Problem - You are provided with some sample images along with this task. These are images extracted from a Celebrity Dataset to be used for segmentation. The task here though, is to crop the original image (named like 'xx.jpg') using it's corresponding mask provided (named like '000xx_skin.png').
For a complete illustration see all cells below.

For this task you should only use 'numpy' for the masking task. Please use standard image processing libraries like opencv, seaborn, matplotlib etc.

Imports and Dependencies
"""

import numpy as np
import pandas as pd
import cv2 as cv 
from google.colab.patches import cv2_imshow # for image display
from skimage import io
from PIL import Image 
import matplotlib.pylab as plt
import os
from sklearn.datasets import load_sample_images

from PIL import Image
img = plt.imread('/content/FaceMaskData/62.jpg')
plt.imshow(img)
print(img.shape)

img_face = cv2.imread('/content/FaceMaskData/62.jpg')
img_mask = cv2.imread('/content/FaceMaskData/00062_skin.png')
##Resizing images
img_face = cv2.resize(img_face, (400,400), interpolation = cv2.INTER_AREA)
img_mask = cv2.resize(img_mask, (400,400), interpolation = cv2.INTER_AREA)


for h in range(len(img_mask)):
    for w in range(len(img_mask)):
        if img_mask[h][w][0] == 0:
            for i in range(3):
                img_face[h][w][i] = 0
        else:
            continue
            
plt.imshow(img_face)

from PIL import Image
img = plt.imread('/content/FaceMaskData/5.jpg')
plt.imshow(img)
print(img.shape)

img_face = cv2.imread('/content/FaceMaskData/5.jpg')
img_mask = cv2.imread('/content/FaceMaskData/00005_skin.png')
##Resizing images
img_face = cv2.resize(img_face, (400,400), interpolation = cv2.INTER_AREA)
img_mask = cv2.resize(img_mask, (400,400), interpolation = cv2.INTER_AREA)

for h in range(len(img_mask)):
    for w in range(len(img_mask)):
        if img_mask[h][w][0] == 0:
            for i in range(3):
                img_face[h][w][i] = 0
        else:
            continue
            
plt.imshow(img_face)
